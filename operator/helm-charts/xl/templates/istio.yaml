{{- if .Values.istioingress.enabled }}
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: t8c-gateway
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    istio: t8c-ingressgateway-{{ .Release.Name }}
  servers:
  - hosts:
    - {{ .Values.global.ingress.domain | default "*.turbonomic.com" | quote }}
    port:
      number: 8080
      name: http
      protocol: HTTP
    tls:
      httpsRedirect: true
      minProtocolVersion: TLSV1_2
  - hosts:
    - {{ .Values.global.ingress.domain | default "*.turbonomic.com" | quote }}
    port:
      number: 8443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
      privateKey: /etc/istio/ingressgateway-certs/tls.key
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: ui
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  gateways:
    - t8c-gateway
  hosts:
    - {{ .Values.global.ingress.domain | default "*.turbonomic.com" | quote }}
  http:
  - match:
    - uri:
        exact: /apidoc
    - uri:
        exact: /swagger
    redirect:
      uri: /apidoc/
  - match:
    - uri:
        exact: /apidoc/
    - uri:
        exact: /swagger/
    - uri:
        exact: /swagger/external/
    redirect:
      uri: /apidoc/index.html
  - match:
    - uri:
        prefix: /apidoc/
    - uri:
        prefix: /swagger/
    rewrite:
      uri: /swagger/external/
    route:
    - destination:
        host: api.{{ .Release.Namespace }}.svc.cluster.local
        port:
          number: 8080
  - match:
    - uri:
        exact: /
    - uri:
        prefix: /app
    - uri:
        prefix: /assets
    - uri:
        prefix: /doc
    route:
    - destination:
        host: ui.{{ .Release.Namespace }}.svc.cluster.local
        port:
          number: 8080
  - match:
    - uri:
        prefix: /api
    - uri:
        prefix: /vmturbo/rest
    - uri:
        prefix: /vmturbo/saml2
    - uri:
        prefix: /vmturbo/oauth2
    - uri:
        prefix: /vmturbo/messages
    - uri:
        prefix: /ws/messages
    route:
    - destination:
        host: api.{{ .Release.Namespace }}.svc.cluster.local
        port:
          number: 8080
  - match:
    - uri:
        prefix: /reports
    route:
    - destination:
        host: grafana.{{ .Release.Namespace }}.svc.cluster.local
        port:
          number: 3000
{{- if .Values.istioingress.routes }}
{{ toYaml .Values.istioingress.routes | indent 2 }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: t8c-istio-ingressgateway
  labels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      istio: t8c-ingressgateway-{{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      istio: t8c-ingressgateway-{{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        istio: t8c-ingressgateway-{{ .Release.Name }}
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - name: istio-proxy
        image: docker.io/istio/proxyv2:1.12.1
        args:
        - proxy
        - router
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --proxyLogLevel=warning
        - --proxyComponentLogLevel=misc:error
        - --log_output_level=default:info
        - --serviceCluster
        - t8c-istio-ingressgateway
        env:
        - name: JWT_POLICY
          value: third-party-jwt
        - name: PILOT_CERT_PROVIDER
          value: istiod
        - name: CA_ADDR
          value: istiod.istio-system.svc:15012
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: ISTIO_META_WORKLOAD_NAME
          value: t8c-istio-ingressgateway
        - name: ISTIO_META_OWNER
          value: kubernetes://api/apps/v1/namespaces/{{ .Release.Namespace }}/deployments/t8c-istio-ingressgateway
        - name: ISTIO_META_MESH_ID
          value: cluster.local
        - name: TRUST_DOMAIN
          value: cluster.local
        - name: ISTIO_META_UNPRIVILEGED_POD
          value: "true"
        - name: ISTIO_META_ROUTER_MODE
          value: standard
        - name: ISTIO_META_CLUSTER_ID
          value: Kubernetes
        ports:
        - containerPort: 8080
        - containerPort: 8443
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 15021
            scheme: HTTP
        resources:
          limits:
            cpu: "2"
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 40Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - mountPath: /etc/istio/config
          name: config-volume
        - mountPath: /var/run/secrets/istio
          name: istiod-ca-cert
        - mountPath: /var/run/secrets/tokens
          name: istio-token
          readOnly: true
        - mountPath: /var/lib/istio/data
          name: istio-data
        - mountPath: /etc/istio/pod
          name: podinfo
        - mountPath: /etc/istio/ingressgateway-certs
          name: ingressgateway-certs
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-ca-certs
          name: ingressgateway-ca-certs
          readOnly: true
      securityContext:
        fsGroup: {{ .Values.global.securityContext.fsGroup | default 1337 }}
        runAsUser: {{ .Values.global.securityContext.fsGroup | default 1337 }}
        runAsGroup: {{ .Values.global.securityContext.fsGroup | default 1337 }}
        runAsNonRoot: true
      serviceAccountName: t8c-operator
      volumes:
      - configMap:
          name: istio-ca-root-cert
        name: istiod-ca-cert
      - downwardAPI:
          items:
            - fieldRef:
                fieldPath: metadata.labels
              path: labels
            - fieldRef:
                fieldPath: metadata.annotations
              path: annotations
        name: podinfo
      - emptyDir: {}
        name: istio-envoy
      - emptyDir: {}
        name: istio-data
      - name: istio-token
        projected:
          sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
      - configMap:
          name: istio
          optional: true
        name: config-volume
      - name: ingressgateway-certs
        secret:
          optional: true
          secretName: istio-ingressgateway-certs
      - name: ingressgateway-ca-certs
        secret:
          optional: true
          secretName: istio-ingressgateway-ca-certs
---
apiVersion: v1
kind: Service
metadata:
  name: t8c-istio-ingressgateway
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    istio: t8c-ingressgateway-{{ .Release.Name }}
  {{- with .Values.global.ingress.annotations }}
  annotations:
{{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    istio: t8c-ingressgateway-{{ .Release.Name }}
  {{- if .Values.global }}
    {{- if .Values.global.externalIP }}
  externalIPs:
  - {{ .Values.global.externalIP }}
    {{ end }}
  ports:
  - name: http2
    port: 80
    targetPort: 8080
  - name: https
    port: 443
    targetPort: 8443
---
  {{- end }}
  {{- if .Values.global.certmanager.enabled }}
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: t8c-istio-gateway
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  secretName: istio-ingressgateway-certs
  issuerRef:
    name: {{ .Values.global.certmanager.issuer }}
    kind: {{ .Values.global.certmanager.kind }}
  commonName: {{ .Values.global.ingress.domain | default "*.turbonomic.com" | quote }}
  dnsNames:
  - {{ .Values.global.ingress.domain | default "*.turbonomic.com" | quote }}
---
  {{ else }}
    {{- range .Values.global.ingress.secrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .name }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .certificate | b64enc }}
  tls.key: {{ .key | b64enc }}
---
    {{- end }}
  {{- end }}
{{- end }}
