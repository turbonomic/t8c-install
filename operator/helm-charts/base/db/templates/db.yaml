{{ if .Values.global }}
  {{ if and (not .Values.global.externalDBName) (not .Values.global.externalDbIP)}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Chart.Name }}-data
  {{- if or .Values.storageAnnotations .Values.global.storageAnnotations }}
  annotations:
    {{- with .Values.storageAnnotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.global.storageAnnotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
  labels:
    zone: secure
    app.kubernetes.io/name: {{ .Chart.Name }}-data
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  accessModes:
  - ReadWriteOnce
{{- if .Values.global }}
  {{- if .Values.global.storageSelector }}
  selector:
    matchLabels:
      partition: {{ .Release.Namespace }}-mysql-data
  {{- end }}
  {{- if .Values.global.storageClassName }}
  storageClassName: {{ .Values.global.storageClassName }}
  {{- end }}
{{- end }}
  resources:
    requests:
      storage: {{ .Values.persistence.size }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    zone: secure
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  template:
    metadata:
{{- if .Values.global }}
  {{- if or .Values.annotations .Values.global.annotations }}
      annotations:
    {{- with .Values.annotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.global.annotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
{{- end }}
      labels:
{{- include "labels" . | nindent 8 }}
        zone: secure
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: non-mediation
    spec:
{{- if .Values.global }}
  {{- if or .Values.serviceAccountName .Values.global.serviceAccountName }}
      serviceAccountName: {{ template "serviceAccountName" . }}
  {{- end }}
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ template "image" . }}
        imagePullPolicy: {{ template "pullPolicy" . }}
        env:
{{ toYaml .Values.env | indent 8 }}
{{- if .Values.global }}
  {{- if or .Values.logtostdout .Values.global.logtostdout }}
        - name: LOG_TO_STDOUT
          value: "true"
  {{- end }}
{{- end }}
        ports:
          - containerPort: 3306
        livenessProbe:
          tcpSocket:
            port: 3306
{{- include "common.getLivenessThresholds" . | indent 10 }}
        readinessProbe:
          tcpSocket:
            port: 3306
{{- include "common.getReadinessThresholds" . | indent 10 }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-data
        - mountPath: /var/log/mysql
          name: mysql-log
        - mountPath: /var/lib/mysql/tmp
          name: mysql-tmp
        - mountPath: /run/mysqld
          name: mysqld-run
        - mountPath: /tmp
          name: db-tmpfs0
{{- if .Values.global }}
  {{- if .Values.global.registry }}
    {{- if .Values.global.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.imagePullSecret }}
    {{- else -}}
      {{- if and .Values.global.imageUsername .Values.global.imagePassword }}
      imagePullSecrets:
      - name: turbocred
      {{- end -}}
    {{- end -}}
  {{- end -}}
  {{- with .Values.global.nodeSelector }}
      nodeSelector:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.affinity }}
      affinity:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.tolerations }}
      tolerations:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.securityContext }}
      securityContext:
{{- toYaml . | nindent 8 }}
  {{- end }}
{{- end }}
      restartPolicy: Always
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}-data
      - name: mysql-log
        emptyDir: {}
      - name: mysql-tmp
        emptyDir: {}
      - name: mysqld-run
        emptyDir: {}
      - name: db-tmpfs0
        emptyDir: {}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  {{ end }}
{{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
  annotations:
{{- include "serviceAnnotations" . | nindent 4 }}
  labels:
{{- include "serviceLabels" . | nindent 4 }}
    zone: secure
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
{{- if and .Values.global .Values.global.externalDbIP }}
# external IP defined, so we'll use a ClusterIP service with a singleton Endpoints
# (ignoring external name if that's also defined)
  type: ClusterIP
  ports:
  - name: mysql-db
    port: 3306
---
apiVersion: v1
kind: Endpoints
metadata:
  name: {{ .Chart.Name }}
subsets:
  - addresses:
      - ip: {{ .Values.global.externalDbIP | quote }}
    ports:
      - name: "mysql-db"
        port: {{ .Values.global.externalDbPort | default 3306 }}
        protocol: TCP
{{- else if and .Values.global .Values.global.externalDBName }}
# external name is defined but not external IP, so we'll use an ExternalName service.
# In this case, because there's no proxying involved, the access port (not specified here)
# will be whatever is specified with `externalDbPort`, defaulting to 3306, and this is
# managed in the overal XL configmap
  type: ExternalName
  externalName: {{ .Values.global.externalDBName }}
{{- else }}
# no external name or IP is specified so db pod will be present, and we'll use a
# ClusterIP service with a selector pointing at the db pod. External port, if
# specified, is ignored
  type: ClusterIP
  ports:
  - name: mysql-db
    port: 3306
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}
