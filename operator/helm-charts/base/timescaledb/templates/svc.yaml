apiVersion: v1
kind: Service
metadata:
  name: {{ template "postgresql.fullname" . }}
  labels:
    zone: secure
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- with .Values.service.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
{{- if and .Values.global .Values.global.externalTimescaleDBIP }}
# external IP defined, so we'll use a ClusterIP service with a singleton Endpoints
# (ignoring external name if that's also defined)
  type: ClusterIP
  ports:
  - name: timescaledb-tcp
    port: 5432
---
apiVersion: v1
kind: Endpoints
metadata:
  name: {{ template "postgresql.fullname" . }}
subsets:
  - addresses:
      - ip: {{ .Values.global.externalTimescaleDBIP | quote }}
    ports:
      - name: timescaledb-tcp
        port: {{ .Values.global.externalTimescaleDBPort | default 5432 }}
        protocol: TCP
{{- else if and .Values.global .Values.global.externalTimescaleDBName }}
# external name is defined but not external IP, so we'll use an ExternalName service.
# In this case, because there's no proxying involved, the access port (not specified here)
# will be whatever is specified with `externalDbPort`, defaulting to 5432, and this is
# managed in the overall XL configmap
  type: ExternalName
  externalName: {{ .Values.global.externalTimescaleDBName }}
{{- else }}
# no external name or IP is specified so db pod will be present, and we'll use a
# ClusterIP service with a selector pointing at the db pod. External port, if
# specified, is ignored
  type: ClusterIP
  ports:
  - name: timescaledb
    port: 5432
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}
