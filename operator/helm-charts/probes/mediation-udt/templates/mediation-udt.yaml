apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    zone: secure
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  template:
    metadata:
{{- if .Values.global }}
  {{- if or .Values.annotations .Values.global.annotations }}
      annotations:
    {{- with .Values.annotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.global.annotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
{{- end }}
      labels:
{{- include "labels" . | nindent 8 }}
        zone: secure
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: mediation
    spec:
{{- if .Values.global }}
  {{- if or .Values.serviceAccountName .Values.global.serviceAccountName }}
      serviceAccountName: {{ template "serviceAccountName" . }}
  {{- end }}
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
{{- if .Values.global }}
  {{- if .Values.global.customImageNames }}
        image: {{ template "udt_image" . }}
  {{- else }}
        image: {{ template "image" . }}
  {{- end }}
        imagePullPolicy: {{ template "pullPolicy" . }}
{{- end }}
        env:
{{ template "java.setJVMEnvironmentOptions" . }}
{{ toYaml .Values.env | indent 8 }}
{{- if .Values.global }}
  {{- if or .Values.logtostdout .Values.global.logtostdout }}
        - name: LOG_TO_STDOUT
          value: "true"
  {{- end }}
{{- end }}
        ports:
          - containerPort: 8080
        livenessProbe:
          httpGet:
            port: 8080
            path: /health
          periodSeconds: 60
          failureThreshold: 60
        readinessProbe:
          httpGet:
            port: 8080
            path: /health
        resources:
{{ toYaml .Values.resources | indent 12 }}
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/turbonomic
          name: turbo-volume
          readOnly: true
{{- if .Values.global }}
    {{- if .Values.global.jwtAuthenticationEnabled }}
        {{- include "kubeAuthSecretsVolumeMount" . | indent 8  -}}
    {{ end }}
{{ end }}
{{ if .Values.global }}
  {{ if .Values.global.disableSameTrustStore }}
        - mountPath: /vault/trust
          name: mediation-udt-truststore-secret
          readOnly: true
  {{- else }}
        - mountPath: /vault/trust
          name: common-truststore-secret
          readOnly: true
  {{- end }}
{{- end }}
        - mountPath: /vault/key
          name: mediation-udt-keystore-secret
          readOnly: true
        - mountPath: /vault/mtlsSecrets
          name: mediation-udt-mtls-secret
          readOnly: true
        - mountPath: /tmp
          name: mediation-udt-tmpfs0
{{- if .Values.global }}
  {{- if .Values.global.registry }}
    {{- if .Values.global.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.imagePullSecret }}
    {{- else -}}
      {{- if and .Values.global.imageUsername .Values.global.imagePassword }}
      imagePullSecrets:
      - name: turbocred
      {{- end -}}
    {{- end -}}
  {{- end -}}
  {{- with .Values.global.nodeSelector }}
      nodeSelector:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.affinity }}
      affinity:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.tolerations }}
      tolerations:
{{- toYaml . | nindent 8 }}
  {{- end }}
{{- end }}
      restartPolicy: Always
      volumes:
      - name: turbo-volume
        configMap:
          name: global-properties-{{ .Release.Name }}
          optional: true
      - name: mediation-udt-truststore-secret
        secret:
          secretName: mediation-udt-truststore-secret
          optional: true
      - name: common-truststore-secret
        secret:
          secretName: common-truststore-secret
          optional: true
      - name: mediation-udt-keystore-secret
        secret:
          secretName: mediation-udt-keystore-secret
          optional: true
      - name: mediation-udt-mtls-secret
        secret:
          secretName: mediation-udt-mtls-secret
          optional: true
      - name: mediation-udt-tmpfs0
        emptyDir: {}
{{- if .Values.global }}
    {{- if .Values.global.jwtAuthenticationEnabled }}
        {{- include "kubeAuthSecretsVolume" . | indent 6 -}}
    {{ end }}
{{ end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
  annotations:
{{- include "serviceAnnotations" . | nindent 4 }}
  labels:
{{- include "serviceLabels" . | nindent 4 }}
    zone: secure
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  ports:
  - name: http-mediation-udt
    port: 8080
{{- if .Values.global }}
  {{- if or .Values.debug .Values.global.debug }}
  - name: tcp-mediation-udt-debug
    port: 8000
  {{- end -}}
{{- end }}
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
